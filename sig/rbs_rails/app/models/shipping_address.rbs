class ShippingAddress < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[ShippingAddress, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def customer_id: () -> Integer

    def customer_id=: (Integer) -> Integer

    def customer_id?: () -> bool

    def customer_id_changed?: () -> bool

    def customer_id_change: () -> [ Integer?, Integer? ]

    def customer_id_will_change!: () -> void

    def customer_id_was: () -> Integer?

    def customer_id_previously_changed?: () -> bool

    def customer_id_previous_change: () -> Array[Integer?]?

    def customer_id_previously_was: () -> Integer?

    def customer_id_before_last_save: () -> Integer?

    def customer_id_change_to_be_saved: () -> Array[Integer?]?

    def customer_id_in_database: () -> Integer?

    def saved_change_to_customer_id: () -> Array[Integer?]?

    def saved_change_to_customer_id?: () -> bool

    def will_save_change_to_customer_id?: () -> bool

    def restore_customer_id!: () -> void

    def clear_customer_id_change: () -> void

    def zipcode: () -> String

    def zipcode=: (String) -> String

    def zipcode?: () -> bool

    def zipcode_changed?: () -> bool

    def zipcode_change: () -> [ String?, String? ]

    def zipcode_will_change!: () -> void

    def zipcode_was: () -> String?

    def zipcode_previously_changed?: () -> bool

    def zipcode_previous_change: () -> Array[String?]?

    def zipcode_previously_was: () -> String?

    def zipcode_before_last_save: () -> String?

    def zipcode_change_to_be_saved: () -> Array[String?]?

    def zipcode_in_database: () -> String?

    def saved_change_to_zipcode: () -> Array[String?]?

    def saved_change_to_zipcode?: () -> bool

    def will_save_change_to_zipcode?: () -> bool

    def restore_zipcode!: () -> void

    def clear_zipcode_change: () -> void

    def prefecture_id: () -> Integer

    def prefecture_id=: (Integer) -> Integer

    def prefecture_id?: () -> bool

    def prefecture_id_changed?: () -> bool

    def prefecture_id_change: () -> [ Integer?, Integer? ]

    def prefecture_id_will_change!: () -> void

    def prefecture_id_was: () -> Integer?

    def prefecture_id_previously_changed?: () -> bool

    def prefecture_id_previous_change: () -> Array[Integer?]?

    def prefecture_id_previously_was: () -> Integer?

    def prefecture_id_before_last_save: () -> Integer?

    def prefecture_id_change_to_be_saved: () -> Array[Integer?]?

    def prefecture_id_in_database: () -> Integer?

    def saved_change_to_prefecture_id: () -> Array[Integer?]?

    def saved_change_to_prefecture_id?: () -> bool

    def will_save_change_to_prefecture_id?: () -> bool

    def restore_prefecture_id!: () -> void

    def clear_prefecture_id_change: () -> void

    def address: () -> String

    def address=: (String) -> String

    def address?: () -> bool

    def address_changed?: () -> bool

    def address_change: () -> [ String?, String? ]

    def address_will_change!: () -> void

    def address_was: () -> String?

    def address_previously_changed?: () -> bool

    def address_previous_change: () -> Array[String?]?

    def address_previously_was: () -> String?

    def address_before_last_save: () -> String?

    def address_change_to_be_saved: () -> Array[String?]?

    def address_in_database: () -> String?

    def saved_change_to_address: () -> Array[String?]?

    def saved_change_to_address?: () -> bool

    def will_save_change_to_address?: () -> bool

    def restore_address!: () -> void

    def clear_address_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods

  def customer: () -> Customer
  def customer=: (Customer?) -> Customer?
  def reload_customer: () -> Customer?
  def build_customer: (untyped) -> Customer
  def create_customer: (untyped) -> Customer
  def create_customer!: (untyped) -> Customer
  def prefecture: () -> Prefecture
  def prefecture=: (Prefecture?) -> Prefecture?
  def reload_prefecture: () -> Prefecture?
  def build_prefecture: (untyped) -> Prefecture
  def create_prefecture: (untyped) -> Prefecture
  def create_prefecture!: (untyped) -> Prefecture
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[ShippingAddress, Integer]
    include Enumerable[ShippingAddress]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[ShippingAddress, Integer]
  end
end
