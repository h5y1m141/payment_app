class Customer < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Customer, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def uid: () -> String?

    def uid=: (String?) -> String?

    def uid?: () -> bool

    def uid_changed?: () -> bool

    def uid_change: () -> [ String?, String? ]

    def uid_will_change!: () -> void

    def uid_was: () -> String?

    def uid_previously_changed?: () -> bool

    def uid_previous_change: () -> Array[String?]?

    def uid_previously_was: () -> String?

    def uid_before_last_save: () -> String?

    def uid_change_to_be_saved: () -> Array[String?]?

    def uid_in_database: () -> String?

    def saved_change_to_uid: () -> Array[String?]?

    def saved_change_to_uid?: () -> bool

    def will_save_change_to_uid?: () -> bool

    def restore_uid!: () -> void

    def clear_uid_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void

    def stripe_customer_id: () -> String

    def stripe_customer_id=: (String) -> String

    def stripe_customer_id?: () -> bool

    def stripe_customer_id_changed?: () -> bool

    def stripe_customer_id_change: () -> [ String?, String? ]

    def stripe_customer_id_will_change!: () -> void

    def stripe_customer_id_was: () -> String?

    def stripe_customer_id_previously_changed?: () -> bool

    def stripe_customer_id_previous_change: () -> Array[String?]?

    def stripe_customer_id_previously_was: () -> String?

    def stripe_customer_id_before_last_save: () -> String?

    def stripe_customer_id_change_to_be_saved: () -> Array[String?]?

    def stripe_customer_id_in_database: () -> String?

    def saved_change_to_stripe_customer_id: () -> Array[String?]?

    def saved_change_to_stripe_customer_id?: () -> bool

    def will_save_change_to_stripe_customer_id?: () -> bool

    def restore_stripe_customer_id!: () -> void

    def clear_stripe_customer_id_change: () -> void
  end
  include GeneratedAttributeMethods
  def customer_payment_methods: () -> CustomerPaymentMethod::ActiveRecord_Associations_CollectionProxy
  def customer_payment_methods=: (CustomerPaymentMethod::ActiveRecord_Associations_CollectionProxy | Array[CustomerPaymentMethod]) -> (CustomerPaymentMethod::ActiveRecord_Associations_CollectionProxy | Array[CustomerPaymentMethod])
  def customer_payment_method_ids: () -> Array[Integer]
  def customer_payment_method_ids=: (Array[Integer]) -> Array[Integer]
  def orders: () -> Order::ActiveRecord_Associations_CollectionProxy
  def orders=: (Order::ActiveRecord_Associations_CollectionProxy | Array[Order]) -> (Order::ActiveRecord_Associations_CollectionProxy | Array[Order])
  def order_ids: () -> Array[Integer]
  def order_ids=: (Array[Integer]) -> Array[Integer]
  def shipping_addresses: () -> ShippingAddress::ActiveRecord_Associations_CollectionProxy
  def shipping_addresses=: (ShippingAddress::ActiveRecord_Associations_CollectionProxy | Array[ShippingAddress]) -> (ShippingAddress::ActiveRecord_Associations_CollectionProxy | Array[ShippingAddress])
  def shipping_address_ids: () -> Array[Integer]
  def shipping_address_ids=: (Array[Integer]) -> Array[Integer]

  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Customer, Integer]
    include Enumerable[Customer]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Customer, Integer]
  end
end
