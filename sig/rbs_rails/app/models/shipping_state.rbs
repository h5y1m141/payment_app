class ShippingState < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[ShippingState, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def order_id: () -> Integer

    def order_id=: (Integer) -> Integer

    def order_id?: () -> bool

    def order_id_changed?: () -> bool

    def order_id_change: () -> [ Integer?, Integer? ]

    def order_id_will_change!: () -> void

    def order_id_was: () -> Integer?

    def order_id_previously_changed?: () -> bool

    def order_id_previous_change: () -> Array[Integer?]?

    def order_id_previously_was: () -> Integer?

    def order_id_before_last_save: () -> Integer?

    def order_id_change_to_be_saved: () -> Array[Integer?]?

    def order_id_in_database: () -> Integer?

    def saved_change_to_order_id: () -> Array[Integer?]?

    def saved_change_to_order_id?: () -> bool

    def will_save_change_to_order_id?: () -> bool

    def restore_order_id!: () -> void

    def clear_order_id_change: () -> void

    def aasm_state: () -> String

    def aasm_state=: (String) -> String

    def aasm_state?: () -> bool

    def aasm_state_changed?: () -> bool

    def aasm_state_change: () -> [ String?, String? ]

    def aasm_state_will_change!: () -> void

    def aasm_state_was: () -> String?

    def aasm_state_previously_changed?: () -> bool

    def aasm_state_previous_change: () -> Array[String?]?

    def aasm_state_previously_was: () -> String?

    def aasm_state_before_last_save: () -> String?

    def aasm_state_change_to_be_saved: () -> Array[String?]?

    def aasm_state_in_database: () -> String?

    def saved_change_to_aasm_state: () -> Array[String?]?

    def saved_change_to_aasm_state?: () -> bool

    def will_save_change_to_aasm_state?: () -> bool

    def restore_aasm_state!: () -> void

    def clear_aasm_state_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods
  def shippings: () -> Shipping::ActiveRecord_Associations_CollectionProxy
  def shippings=: (Shipping::ActiveRecord_Associations_CollectionProxy | Array[Shipping]) -> (Shipping::ActiveRecord_Associations_CollectionProxy | Array[Shipping])
  def shipping_ids: () -> Array[Integer]
  def shipping_ids=: (Array[Integer]) -> Array[Integer]

  def order: () -> Order
  def order=: (Order?) -> Order?
  def reload_order: () -> Order?
  def build_order: (untyped) -> Order
  def create_order: (untyped) -> Order
  def create_order!: (untyped) -> Order
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  def shipping_request!: () -> bool
  def shipping_request?: () -> bool
  def shipping_in_ready!: () -> bool
  def shipping_in_ready?: () -> bool
  def cancellation_request!: () -> bool
  def cancellation_request?: () -> bool
  def cancellation_complete!: () -> bool
  def cancellation_complete?: () -> bool
  def shipping_complete!: () -> bool
  def shipping_complete?: () -> bool
  def self.shipping_request: () -> ActiveRecord_Relation
  def self.shipping_in_ready: () -> ActiveRecord_Relation
  def self.cancellation_request: () -> ActiveRecord_Relation
  def self.cancellation_complete: () -> ActiveRecord_Relation
  def self.shipping_complete: () -> ActiveRecord_Relation

  module GeneratedRelationMethods
    def shipping_request: () -> ActiveRecord_Relation

    def shipping_in_ready: () -> ActiveRecord_Relation

    def cancellation_request: () -> ActiveRecord_Relation

    def cancellation_complete: () -> ActiveRecord_Relation

    def shipping_complete: () -> ActiveRecord_Relation
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[ShippingState, Integer]
    include Enumerable[ShippingState]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[ShippingState, Integer]
  end
end
